name: TNG Build

on:
  push:
    branches: ["master", "aqtion"]

env:
  LIN64_DIST_DIR: "linux-x64-tng"
  LINARM64_DIST_DIR: "linux-arm64-tng"
  WIN64_DIST_DIR: "windows-x64-tng"
  WIN32_DIST_DIR: "windows-i386-tng"

jobs:
  x86_build_tng:
    runs-on: [self-hosted, x86]
    steps:
      - uses: actions/checkout@v3
        with:
          # repository: aq2-tng/aq2-tng  ## Official repository
          repository: actionquake/aq2-tng
          ref: ${{ github.ref }}
          path: build

      - uses: actions/checkout@v3
        with:
          repository: actionquake/distrib
          path: config

      - name: Get version info for tng
        id: version
        run: |
          cp config/build/getversion.sh build/
          cd build && bash -x getversion.sh tng >> versions

      - name: Set shortversion
        id: shortversion
        working-directory: build
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build TNG (Win 64-bit)
        working-directory: build/source
        run: make -j2 V=1 && mv gamex86_64.dll ../gamex86_64.dll
        env:
          TNG_BUILD_FOR: "WIN64"

      - name: Generate Win64 archive
        uses: actions/upload-artifact@v3
        with:
          name: tng-win-64
          path: |
            build/gamex86_64.dll
            build/versions

      - name: Build TNG (Win 32-bit)
        working-directory: build/source
        run: make clean && make -j2 V=1 && mv gamex86.dll ../gamex86.dll
        env:
          TNG_BUILD_FOR: "WIN32"

      - name: Generate Win32 archive
        uses: actions/upload-artifact@v3
        with:
          name: tng-win-32
          path: |
            build/gamex86.dll
            build/versions

      - name: Build TNG (Linux 64-bit)
        working-directory: build/source
        run: make clean && make -j2 V=1 && mv gamex86_64.so ../gamex86_64.so
        env:
          CC: "gcc"

      - name: Generate Linux x86 archive
        uses: actions/upload-artifact@v3
        with:
          name: tng-lin-x86_64
          path: |
            build/gamex86_64.so
            build/versions

  arm64_build_tng:
    runs-on: [self-hosted, ARM64]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: actionquake/aq2-tng
          ref: ${{ github.ref }}
          path: build

      - uses: actions/checkout@v3
        with:
          repository: actionquake/distrib
          path: config

      - name: Get version info for tng
        id: version
        run: |
          cp config/build/getversion.sh build/
          cd build && bash -x getversion.sh tng >> versions

      - name: Build TNG (Linux ARM64)
        working-directory: build/source
        run: make -j2 V=1 && mv gameaarch64.so ../gameaarch64.so
        env:
          CC: "gcc"

      - name: Generate archive
        uses: actions/upload-artifact@v3
        with:
          name: tng-lin-arm64
          path: |
            build/gameaarch64.so
            build/versions

  # generate_release:
  #   needs: ["x86_build_tng", "arm64_build_tng"]
  #   runs-on: [self-hosted, x86]
  #   steps:
  #     - name: Generate directories
  #       run: |
  #         mkdir -p ${{ env.LIN64_DIST_DIR }}
  #         mkdir -p ${{ env.LINARM64_DIST_DIR }}
  #         mkdir -p ${{ env.WIN64_DIST_DIR }}
  #         mkdir -p ${{ env.WIN32_DIST_DIR }}

  #     - name: Download Linux x86_64 TNG artifacts
  #       uses: dawidd6/action-download-artifact@v2
  #       with:
  #         workflow: build.yaml
  #         name: tng-lin-x86_64
  #         path: ${{ env.LIN64_DIST_DIR }}/

  #     - name: Download Linux ARM64 TNG artifacts
  #       uses: dawidd6/action-download-artifact@v2
  #       with:
  #         workflow: build.yaml
  #         name: tng-lin-arm64
  #         path: ${{ env.LINARM64_DIST_DIR }}/

  #     - name: Download Windows x86_64 TNG artifacts
  #       uses: dawidd6/action-download-artifact@v2
  #       with:
  #         workflow: build.yaml
  #         name: tng-win-64
  #         path: ${{ env.WIN64_DIST_DIR }}/

  #     - name: Download Windows i386 TNG artifacts
  #       uses: dawidd6/action-download-artifact@v2
  #       with:
  #         workflow: build.yaml
  #         name: tng-win-32
  #         path: ${{ env.WIN32_DIST_DIR }}/

  #     - name: Create singular directory and zip it up
  #       run: |
  #         mkdir tng-serverfiles
  #         cp ${{ env.LIN64_DIST_DIR }}/* tng-serverfiles/
  #         cp ${{ env.LINARM64_DIST_DIR }}/* tng-serverfiles/
  #         cp ${{ env.WIN64_DIST_DIR }}/* tng-serverfiles/
  #         cp ${{ env.WIN32_DIST_DIR }}/* tng-serverfiles/
  #         zip -r tng-serverfiles.zip tng-serverfiles

  #     - name: Create release
  #       uses: actions/create-release@v1
  #       id: create_release
  #       with:
  #         draft: false
  #         prerelease: false
  #         release_name: aq2-tng-${{ steps.shortversion.outputs.sha_short }}
  #         tag_name: ${{ steps.shortversion.outputs.sha_short }}
  #         #body_path: CHANGELOG.md
  #         body: ${{steps.github_release.outputs.changelog}}
